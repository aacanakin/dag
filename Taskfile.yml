# https://taskfile.dev/

version: "3"

env:
  TEST_COVERAGE_THRESHOLD: 90

tasks:
  clean:
    desc: Clean
    cmds:
      - go clean

  build:
    desc: Build
    cmds:
      - go build

  lint:install:
    desc: Install linter
    cmds:
      - go install github.com/golangci/golangci-lint/cmd/golangci-lint@latest

  lint:
    desc: Lint the project
    deps:
      - lint:install
    cmds:
      - golangci-lint run

  test:clean:
    desc: Clean test cache
    cmds:
      - go clean -testcache
      - rm -f coverage.out

  test:
    desc: Run tests with verbose flag
    deps:
      - test:clean
    cmds:
      - go test ./...

  test:codecov:
    desc: Run tests for codecov reporting
    cmds:
      - go test -v ./... -coverprofile=coverage.txt

  test:verbose:
    desc: Run tests
    deps:
      - test:clean
    cmds:
      - go test -v ./... -coverprofile=coverage.out

  test:race:
    desc: Run tests with race flag
    deps:
      - test:clean
    cmds:
      - go test -race -v  ./...

  test:cover:
    desc: Run tests with coverage
    cmds:
      - go test ./... -cover

  test:coverprofile:
    desc: Run tests with coverage profile
    cmds:
      - go test ./... -coverprofile=coverage.out
      - go tool cover -func coverage.out
      - |
        echo "Checking test coverage is above threshold ..."
        echo "Threshold             : $TEST_COVERAGE_THRESHOLD %"
        totalCoverage=`go tool cover -func=coverage.out | grep total | grep -Eo '[0-9]+\.[0-9]+'`
        echo "Current test coverage : $totalCoverage %"
        if (( $(echo "$totalCoverage $TEST_COVERAGE_THRESHOLD" | awk '{print ($1 > $2)}') )); then
            echo "OK"
        else
            echo "Current test coverage is below threshold. Please add more unit tests or adjust threshold to a lower value."
            echo "Failed"
            exit 1
        fi

  test:cover:report:
    desc: Show coverage
    deps:
      - test:coverprofile
    cmds:
      - go tool cover -html=coverage.out

  docs:install:
    desc: Install godoc
    cmds:
      - go install golang.org/x/tools/cmd/godoc@latest

  docs:start:
    desc: Start docs server
    deps:
      - docs:install
    cmds:
      - godoc -http :8080

  ci:
    desc: Run CI
    cmds:
      - task: build
      - task: lint
      - task: test:race
      - task: test:coverprofile
